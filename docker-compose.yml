version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:14
    container_name: jenkins-nas-postgres
    environment:
      POSTGRES_DB: jenkins_nas_deployment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - jenkins-nas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d jenkins_nas_deployment"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 백엔드 API 서버
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    container_name: jenkins-nas-backend
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=jenkins_nas_deployment
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=dev-jwt-secret-key
      - JWT_EXPIRES_IN=1h
      - REFRESH_TOKEN_SECRET=dev-refresh-secret-key
      - REFRESH_TOKEN_EXPIRES_IN=8h
      - CORS_ORIGIN=http://localhost:5173
      - PORT=3001
      - NAS_MOUNT_PATH=/mnt/nas
      - NAS_SCAN_INTERVAL=300000
      - JENKINS_WEBHOOK_SECRET=dev-webhook-secret
      - LOG_LEVEL=debug
    ports:
      - "3001:3001"
    volumes:
      - nas_volume:/mnt/nas:ro  # NAS 마운트 포인트 (읽기 전용)
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - jenkins-nas-network
    restart: unless-stopped
    command: ["sh", "-c", "echo 'Starting Harbor backend...' && /app/scripts/migrate.sh && echo 'Starting Node.js application...' && node src/app.js"]

  # 프론트엔드 개발 서버
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    container_name: jenkins-nas-frontend
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
      - VITE_WS_URL=ws://localhost:3001
    ports:
      - "5173:80"
    # volumes removed for production build
    depends_on:
      - backend
    networks:
      - jenkins-nas-network
    restart: unless-stopped
    command: ["nginx", "-g", "daemon off;"]

  # Redis (세션 저장용 - 옵션)
  redis:
    image: redis:7-alpine
    container_name: jenkins-nas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jenkins-nas-network
    restart: unless-stopped

# 볼륨 정의
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nas_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /path/to/your/nas/mount  # 실제 NAS 마운트 경로로 변경 필요

# 네트워크 정의
networks:
  jenkins-nas-network:
    driver: bridge