# 개발 환경용 Dockerfile
FROM node:18-alpine as development

WORKDIR /app

# 패키지 파일들을 먼저 복사 (캐시 최적화)
COPY frontend/package*.json ./

# 의존성 설치
RUN npm ci

# 소스 코드 복사
COPY frontend/ ./

# 개발 서버 실행
EXPOSE 5173
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

# 프로덕션 빌드용 멀티스테이지
FROM node:18-alpine as build

WORKDIR /app

# 패키지 파일들을 먼저 복사
COPY frontend/package*.json ./

# 의존성 설치
RUN npm ci

# 소스 코드 복사 및 빌드
COPY frontend/ ./
RUN npm run build

# 프로덕션 서빙용 Nginx
FROM nginx:alpine as production

# 빌드된 파일들을 Nginx로 복사
COPY --from=build /app/dist /usr/share/nginx/html

# Nginx 설정 복사
COPY frontend/nginx.conf /etc/nginx/nginx.conf

# 비root 사용자로 실행
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -u 1001 -G nginx

# 포트 설정
EXPOSE 80

# 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

CMD ["nginx", "-g", "daemon off;"]