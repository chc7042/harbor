server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Harbor Backend Logs
  - job_name: harbor-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: harbor-backend
          service: backend
          environment: production
          __path__: /var/log/harbor/backend*.log

  # Harbor Frontend/Nginx Logs
  - job_name: harbor-nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: harbor-nginx
          service: frontend
          environment: production
          __path__: /var/log/nginx/*.log

  # System Logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          service: system
          environment: production
          __path__: /var/log/syslog

  # Docker Container Logs
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'

  # Harbor Database Logs
  - job_name: harbor-postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: harbor-postgres
          service: postgres
          environment: production
          __path__: /var/log/postgresql/*.log

  # Application Error Logs
  - job_name: harbor-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: harbor-errors
          service: application
          level: error
          environment: production
          __path__: /var/log/harbor/error*.log

pipeline_stages:
  # Parse JSON logs from backend
  - match:
      selector: '{service="backend"}'
      stages:
        - json:
            expressions:
              timestamp: timestamp
              level: level
              message: message
              service: service
        - timestamp:
            source: timestamp
            format: RFC3339
        - labels:
            level:

  # Parse Nginx access logs
  - match:
      selector: '{service="frontend"} |~ "access"'
      stages:
        - regex:
            expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>\S+) \[(?P<time_local>.*?)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>.*?)" "(?P<http_user_agent>.*?)"'
        - timestamp:
            source: time_local
            format: '02/Jan/2006:15:04:05 -0700'
        - labels:
            method:
            status:
            path:

  # Parse Nginx error logs
  - match:
      selector: '{service="frontend"} |~ "error"'
      stages:
        - regex:
            expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<message>.*)'
        - timestamp:
            source: timestamp
            format: '2006/01/02 15:04:05'
        - labels:
            level:

  # Parse PostgreSQL logs
  - match:
      selector: '{service="postgres"}'
      stages:
        - regex:
            expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+): (?P<message>.*)'
        - timestamp:
            source: timestamp
            format: '2006-01-02 15:04:05.000 MST'
        - labels:
            level:
            pid: